# Generated by "yarp cmake" & Juan G Victores 2016

set(KEYWORD "TrajectoryLib")

FIND_PACKAGE(orocos_kdl REQUIRED)

#gait
#Change directory here if Gait instalation is not found
set(GAIT_LOCATION /usr/local)
message(STATUS "Looking for local Gait in: [${GAIT_LOCATION}].")
# TODO:force to refresh find_library every run
find_library(gait_LIBRARY NAMES gait libgait PATHS "${GAIT_LOCATION}/lib/gait/")
if(${gait_LIBRARY} STREQUAL "gait_LIBRARY-NOTFOUND")
    #Try to use the source code if not installed
    message(STATUS "Gait not installed. Trying to compile gait from sources")
    add_subdirectory(${PROJECT_SOURCE_DIR}/lib/gait)
    set(GAIT_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/lib/gait/src ${GAIT_INCLUDE_DIR})
    set(gait_LIBRARY "gait")
else()
    #Try to use the local lib if installed
    message(STATUS "Gait library found. Using local files")
    FIND_PATH(GAIT_INCLUDE_DIR Gait.h /usr/local/include/gait/)
    message(STATUS "Local Gait files detected: [${gait_LIBRARY}].")
    message(STATUS "Local include directories: [${GAIT_INCLUDE_DIR}].")
endif()
INCLUDE_DIRECTORIES(${GAIT_INCLUDE_DIR})

# Search for source code.
file(GLOB folder_source *.cpp *.cc *.c)
file(GLOB folder_header *.h)
source_group("Source Files" FILES ${folder_source})
source_group("Header Files" FILES ${folder_header})

# Automatically add include directories if needed.
foreach(header_file ${folder_header})
  get_filename_component(p ${header_file} PATH)
  include_directories(${p})
endforeach(header_file ${folder_header})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${orocos_kdl_INCLUDE_DIRS} ${TEO_INCLUDE_DIRS})

# Set up our library.
if (folder_source)
  add_library(${KEYWORD} ${folder_source} ${folder_header})
  target_link_libraries(${KEYWORD} ${orocos_kdl_LIBRARIES})
  install(TARGETS ${KEYWORD} DESTINATION lib)
else (folder_source)
  message(FATAL_ERROR "No source code files found. Please add something")
endif (folder_source)

# Exporting dependencies for ASIBOTConfig.cmake quite manually for now... 
set(TEO_INCLUDE_DIRS ${TEO_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL "appended header dirs")
set(TEO_LIBRARIES ${TEO_LIBRARIES} ${KEYWORD} CACHE INTERNAL "appended libraries")

